{
  "_args": [
    [
      {
        "raw": "evozonjs-elements@git://github.com/evozonjs/elements.git#v0.0.1",
        "scope": null,
        "escapedName": "evozonjs-elements",
        "name": "evozonjs-elements",
        "rawSpec": "git://github.com/evozonjs/elements.git#v0.0.1",
        "spec": "git://github.com/evozonjs/elements.git#v0.0.1",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:evozonjs/elements.git#v0.0.1",
          "sshUrl": "git+ssh://git@github.com/evozonjs/elements.git#v0.0.1",
          "httpsUrl": "git+https://github.com/evozonjs/elements.git#v0.0.1",
          "gitUrl": "git://github.com/evozonjs/elements.git#v0.0.1",
          "shortcut": "github:evozonjs/elements#v0.0.1",
          "directUrl": "https://raw.githubusercontent.com/evozonjs/elements/v0.0.1/package.json"
        }
      },
      "D:\\js_projects\\firebase-auth"
    ]
  ],
  "_from": "git://github.com/evozonjs/elements.git#v0.0.1",
  "_id": "evozonjs-elements@0.0.1",
  "_inCache": true,
  "_location": "/evozonjs-elements",
  "_phantomChildren": {},
  "_requested": {
    "raw": "evozonjs-elements@git://github.com/evozonjs/elements.git#v0.0.1",
    "scope": null,
    "escapedName": "evozonjs-elements",
    "name": "evozonjs-elements",
    "rawSpec": "git://github.com/evozonjs/elements.git#v0.0.1",
    "spec": "git://github.com/evozonjs/elements.git#v0.0.1",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:evozonjs/elements.git#v0.0.1",
      "sshUrl": "git+ssh://git@github.com/evozonjs/elements.git#v0.0.1",
      "httpsUrl": "git+https://github.com/evozonjs/elements.git#v0.0.1",
      "gitUrl": "git://github.com/evozonjs/elements.git#v0.0.1",
      "shortcut": "github:evozonjs/elements#v0.0.1",
      "directUrl": "https://raw.githubusercontent.com/evozonjs/elements/v0.0.1/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/evozonjs/elements.git#57a9069ad7822db4d2d026ab391f4eb9c26406c0",
  "_shasum": "617a416bb98e65a8a572ec51ffb1e28536146078",
  "_shrinkwrap": null,
  "_spec": "evozonjs-elements@git://github.com/evozonjs/elements.git#v0.0.1",
  "_where": "D:\\js_projects\\firebase-auth",
  "author": {
    "name": "Paul BRIE"
  },
  "bugs": {
    "url": "https://github.com/evozonjs/elements/issues"
  },
  "dependencies": {
    "node-uuid": "^1.4.7"
  },
  "description": "A package with basic building blocks used by Evozon's JavaScript department",
  "devDependencies": {},
  "gitHead": "57a9069ad7822db4d2d026ab391f4eb9c26406c0",
  "homepage": "https://github.com/evozonjs/elements#readme",
  "license": "MIT",
  "main": "index.js",
  "name": "evozonjs-elements",
  "optionalDependencies": {},
  "readme": "# Evozonjs Elements\r\nEvozonjs Elements is a suite of basic building blocks used in the JavaScript department of [Evozon](https://evozon.com).\r\n\r\n## Setup\r\n```\r\nnpm install git://github.com/evozonjs/elements.git --save\r\n```\r\n\r\n## elements/response\r\n\r\nelements/response proposes a standard format for messages. We propose the following attributes:\r\n\r\nName       | Type         | Required | Default | Description\r\n---------- | ------       | -------- | ------- | -------\r\n`uid`      |`string`      | NO       | auto    | a unique timebased message identifier (based on node-uuid v1)\r\n`ok`       |`boolean`     | YES      |         | status of the message\r\n`code`     |`number`      | NO       | `0`     | a numeric code\r\n`data`     |`array|object`| NO       | `{}`    | main data container\r\n`metadata` |`object`      | NO       | `{}`    | secondary data container\r\n`err`      |`string`      | NO       | `''`    | will contain an error message in case of an error\r\n`msg`      |`string`      | NO       | `''`    | an extra message\r\n\r\nThe constructor accepts the following instantiation scenarios:\r\n\r\n```javascript\r\n// load an element\r\nconst response = require('elements/response');\r\n\r\n// 1 object parameter holding some of all the attributes\r\nconsole.log(new response({ ok: false, err: 'some error'}));\r\n \r\n/**\r\n-- will return --\r\n{ uid: '76a16e00-f5dc-11e6-af8e-cf6322a4a5f7',\r\n  ok: true,\r\n  code: 0,\r\n  data: {},\r\n  metadata: {},\r\n  err: '',\r\n  msg: '' }\r\n*/\r\n\r\n// or 1 boolean parameter considered as being the 'ok' attribute \r\nconsole.log(response(true));\r\n/** \r\n-- will return --\r\n{ uid: '76a16e00-f5dc-11e6-af8e-cf6322a4a5f7',\r\n  ok: true,\r\n  code: 0,\r\n  data: {},\r\n  metadata: {},\r\n  err: '',\r\n  msg: '' }\r\n*/\r\n\r\n// or 2 parameters considered as being the 'ok' attribute and the 'data' attribute\r\nconsole.log(new response(true, [1,2,3]));\r\n/** \r\n-- will return --\r\n{ uid: 'f66328d0-f5dd-11e6-9ba8-61642a559e2e',\r\n  ok: true,\r\n  code: 0,\r\n  data: [ 1, 2, 3 ],\r\n  metadata: { count: 3 },\r\n  err: '',\r\n  msg: '' }\r\n*/\r\n\r\n// or 3 parameters considered as being the 'ok' attribute, the 'data' attribute, and the 'metadata' attribute\r\nconsole.log(response(true, [1,2,3], { extra: 'some data' }));\r\n/**\r\n-- will return --\r\n{ uid: 'd6f81960-f5dd-11e6-94ca-35a81f2588d0',\r\n  ok: true,\r\n  code: 0,\r\n  data: [ 1, 2, 3 ],\r\n  metadata: { extra: 'some data', count: 3 },\r\n  err: '',\r\n  msg: '' }\r\n*/\r\n\r\n```\r\n\r\nAs a bonus, if the `data` attribute is an array, and if `metadata.count` is not defined by the user the constructor will\r\nautomatically put the array length into `metadata.count`.\r\n\r\nIf the format of an attribute is not accepted and error will be thrown.\r\n\r\n## Licence\r\nMIT\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/evozonjs/elements.git"
  },
  "version": "0.0.1"
}
